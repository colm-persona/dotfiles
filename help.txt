diff --git a/.config/fish/.DS_Store b/.config/fish/.DS_Store
old mode 100644
new mode 100755
diff --git a/.config/fish/conf.d/omf.fish b/.config/fish/conf.d/omf.fish
old mode 100644
new mode 100755
diff --git a/.config/fish/config.fish b/.config/fish/config.fish
old mode 100644
new mode 100755
diff --git a/.config/fish/fish_variables b/.config/fish/fish_variables
old mode 100644
new mode 100755
diff --git a/.config/nvim/README.md b/.config/nvim/README.md
old mode 100644
new mode 100755
diff --git a/.config/nvim/after/plugin/colors.lua b/.config/nvim/after/plugin/colors.lua
old mode 100644
new mode 100755
diff --git a/.config/nvim/after/plugin/copilot.lua b/.config/nvim/after/plugin/copilot.lua
old mode 100644
new mode 100755
diff --git a/.config/nvim/after/plugin/fugitive.lua b/.config/nvim/after/plugin/fugitive.lua
old mode 100644
new mode 100755
diff --git a/.config/nvim/after/plugin/harpoon.lua b/.config/nvim/after/plugin/harpoon.lua
old mode 100644
new mode 100755
diff --git a/.config/nvim/after/plugin/lsp.lua b/.config/nvim/after/plugin/lsp.lua
old mode 100644
new mode 100755
index c1d5816..e8a1c9c
--- a/.config/nvim/after/plugin/lsp.lua
+++ b/.config/nvim/after/plugin/lsp.lua
@@ -1,3 +1,61 @@
+require('mason').setup()
+
+vim.diagnostic.config({ virtual_lines =  true })
+
+local configs = {}
+
+for _, v in ipairs(vim.api.nvim_get_runtime_file('lsp/*', true)) do
+  local name = vim.fn.fnamemodify(v, ':t:r')
+  configs[name] = true
+end
+
+vim.lsp.enable(vim.tbl_keys(configs))
+
+vim.o.winborder = 'rounded'
+
+local augroup = vim.api.nvim_create_augroup
+local colmgroup = augroup('colm', {})
+local autocmd = vim.api.nvim_create_autocmd
+
+autocmd('LspAttach', {
+    group = colmgroup,
+    callback = function(e)
+        local opts = { buffer = e.buf }
+        vim.keymap.set("n", "gd", function() vim.lsp.buf.definition() end, opts)
+        vim.keymap.set("n", "K", function() vim.lsp.buf.hover() end, opts)
+        vim.keymap.set("n", "<leader>vws", function() vim.lsp.buf.workspace_symbol() end, opts)
+        vim.keymap.set("n", "<leader>vd", function() vim.diagnostic.open_float() end, opts)
+        vim.keymap.set("n", "<leader>vca", function() vim.lsp.buf.code_action() end, opts)
+        vim.keymap.set("n", "<leader>vrr", function() vim.lsp.buf.references() end, opts)
+        vim.keymap.set("n", "<leader>vrn", function() vim.lsp.buf.rename() end, opts)
+        vim.keymap.set("i", "<C-h>", function() vim.lsp.buf.signature_help() end, opts)
+        vim.keymap.set("n", "[d", function() vim.diagnostic.goto_next() end, opts)
+        vim.keymap.set("n", "]d", function() vim.diagnostic.goto_prev() end, opts)
+    end
+})
+
+local cmp = require('blink.cmp')
+cmp.setup({})
+
+-- Hide copilot on suggestion
+vim.api.nvim_create_autocmd('User', {
+  pattern = 'BlinkCmpMenuOpen',
+  callback = function()
+    require("copilot.suggestion").dismiss()
+    vim.b.copilot_suggestion_hidden = true
+  end,
+})
+
+vim.api.nvim_create_autocmd('User', {
+  pattern = 'BlinkCmpMenuClose',
+  callback = function()
+    vim.b.copilot_suggestion_hidden = false
+  end,
+})
+
+--[[
+--
+--
 local lsp = require('lsp-zero').preset("recommended")
 
 lsp.ensure_installed({
@@ -117,3 +175,4 @@ vim.api.nvim_create_autocmd(
         end,
     }
 )
+]]--
diff --git a/.config/nvim/after/plugin/lualine.lua b/.config/nvim/after/plugin/lualine.lua
old mode 100644
new mode 100755
diff --git a/.config/nvim/after/plugin/telescope.lua b/.config/nvim/after/plugin/telescope.lua
old mode 100644
new mode 100755
diff --git a/.config/nvim/after/plugin/treesitter.lua b/.config/nvim/after/plugin/treesitter.lua
old mode 100644
new mode 100755
diff --git a/.config/nvim/after/plugin/undotree.lua b/.config/nvim/after/plugin/undotree.lua
old mode 100644
new mode 100755
diff --git a/.config/nvim/after/plugin/vimgo.lua b/.config/nvim/after/plugin/vimgo.lua
old mode 100644
new mode 100755
diff --git a/.config/nvim/after/plugin/zen.lua b/.config/nvim/after/plugin/zen.lua
old mode 100644
new mode 100755
diff --git a/.config/nvim/init.lua b/.config/nvim/init.lua
old mode 100644
new mode 100755
diff --git a/.config/nvim/lsp/basedpyright.lua b/.config/nvim/lsp/basedpyright.lua
new file mode 100755
index 0000000..549149e
--- /dev/null
+++ b/.config/nvim/lsp/basedpyright.lua
@@ -0,0 +1,17 @@
+return {
+  cmd = { 'basedpyright-langserver', '--stdio' },
+  filetypes = { 'python' },
+  root_markers = {
+    { 'pyproject.toml', 'setup.py', 'setup.cfg', 'requirements.txt' },
+    '.git',
+  },
+
+  settings = {
+    python = {},
+    basedpyright = {
+      analysis = {
+        typeCheckingMode = "basic"
+      }
+    }
+  }
+}
diff --git a/.config/nvim/lsp/lua_ls.lua b/.config/nvim/lsp/lua_ls.lua
new file mode 100755
index 0000000..cb1453f
--- /dev/null
+++ b/.config/nvim/lsp/lua_ls.lua
@@ -0,0 +1,23 @@
+return {
+  -- Command and arguments to start the server.
+  cmd = { 'lua-language-server' },
+  -- Filetypes to automatically attach to.
+  filetypes = { 'lua' },
+
+  root_markers = {
+    { 'init.lua' },
+    '.git',
+  },
+  -- Specific settings to send to the server. The schema is server-defined.
+  -- Example: https://raw.githubusercontent.com/LuaLS/vscode-lua/master/setting/schema.json
+  settings = {
+    Lua = {
+      runtime = {
+        version = 'LuaJIT',
+      },
+      diagnostics = {
+          globals = { 'vim' }
+      }
+    }
+  }
+}
diff --git a/.config/nvim/lsp/ruff.lua b/.config/nvim/lsp/ruff.lua
new file mode 100755
index 0000000..170d492
--- /dev/null
+++ b/.config/nvim/lsp/ruff.lua
@@ -0,0 +1,10 @@
+return {
+  -- Command and arguments to start the server.
+  cmd = { 'ruff', 'server' },
+  -- Filetypes to automatically attach to.
+  filetypes = { 'python' },
+  root_markers = {
+    { 'pyproject.toml', 'setup.py', 'setup.cfg', 'requirements.txt' },
+    '.git',
+  },
+}
diff --git a/.config/nvim/lua/colmpat/base.lua b/.config/nvim/lua/colmpat/base.lua
old mode 100644
new mode 100755
diff --git a/.config/nvim/lua/colmpat/highlights.lua b/.config/nvim/lua/colmpat/highlights.lua
old mode 100644
new mode 100755
diff --git a/.config/nvim/lua/colmpat/maps.lua b/.config/nvim/lua/colmpat/maps.lua
old mode 100644
new mode 100755
diff --git a/.config/nvim/lua/colmpat/plugins.lua b/.config/nvim/lua/colmpat/plugins.lua
old mode 100644
new mode 100755
index cf271eb..8522db0
--- a/.config/nvim/lua/colmpat/plugins.lua
+++ b/.config/nvim/lua/colmpat/plugins.lua
@@ -37,33 +37,11 @@ packer.startup(function(use)
       require('gitsigns').setup()
     end
   }
-
-  -- go
-  -- use { 'fatih/vim-go', run = ':GoUpdateBinaries' }
+  use 'williamboman/mason.nvim'
 
   use {
-    'VonHeikemen/lsp-zero.nvim',
-    branch = 'v1.x',
-    requires = {
-      -- LSP Support
-      {'neovim/nvim-lspconfig'},             -- Required
-      {'williamboman/mason.nvim'},           -- Optional
-      {'williamboman/mason-lspconfig.nvim'}, -- Optional
-
-      -- Autocompletion
-      {'hrsh7th/nvim-cmp'},         -- Required
-      {'hrsh7th/cmp-nvim-lsp'},     -- Required
-      {'hrsh7th/cmp-buffer'},       -- Optional
-      {'hrsh7th/cmp-path'},         -- Optional
-      {'saadparwaiz1/cmp_luasnip'}, -- Optional
-      {'hrsh7th/cmp-nvim-lua'},     -- Optional
-
-      -- Snippets
-      {'L3MON4D3/LuaSnip'},             -- Required
-      {'rafamadriz/friendly-snippets'}, -- Optional
-    }
+    'saghen/blink.cmp',
+    version = '1.*',
   }
 
-  use 'mfussenegger/nvim-lint'
-
 end)
diff --git a/.config/tmux/dark.common b/.config/tmux/dark.common
old mode 100644
new mode 100755
diff --git a/.config/tmux/light.common b/.config/tmux/light.common
old mode 100644
new mode 100755
